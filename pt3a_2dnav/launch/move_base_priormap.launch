<launch>
  <arg name="map_file" default="mymap"/>

  <node name="map_server" pkg="map_server" type="map_server" args="$(find pt3a_2dnav)/maps/$(arg map_file).yaml"/>



Example launch file: uses laser_scan_matcher together with
slam_gmapping 


  <include file="$(find pt3a_2dnav)/launch/amcl.launch"/>

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find pt3a_2dnav)/config/costmap_common_params.yml" command="load" ns="global_costmap"/>
    <rosparam file="$(find pt3a_2dnav)/config/costmap_common_params.yml" command="load" ns="local_costmap"/>
    <rosparam file="$(find pt3a_2dnav)/config/local_costmap_params.yml" command="load"/>
    <rosparam file="$(find pt3a_2dnav)/config/global_costmap_params.yml" command="load"/>
    <rosparam file="$(find pt3a_2dnav)/config/base_local_planner_params.yml" command="load"/>
  </node>
<!-- 
<node pkg="tf" type="static_transform_publisher" name="link1_broadcaster" args="10 0 0 0 0 0 1 map base_link 100" />
<node pkg="tf" type="static_transform_publisher" name="link1_broadcaste1r" args="0 0 0 0 0 0 1 base_link odom 100" />-->

 <node pkg ="tf" 	type="static_transform_publisher" 	name="odom_to_base_link"  	args="0.0 0.0 0.0 0.0 0.0 0.0 /odom /base_link 40"/>
  <node pkg ="tf" 	type="static_transform_publisher" 	name="base_link_to_laser" 	args="0.0 0.0 0.0 0.0 0.0 0.0 /base_link /laser 40" />
 
</launch>
